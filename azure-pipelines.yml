# Node.js Function App to Linux on Azure
# Build a Node.js function app and deploy it to Azure as a Linux function app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '0e6b26b6-1e16-4dad-863b-7aaa28ea2438'

  # Function app name
  functionAppName: 'jeusmenodedevops'

  # Environment name
  environmentName: 'jesumepyfuncdevops'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: 'Install Node.js'

    - script: |
        if [ -f extensions.csproj ]
        then
            dotnet build extensions.csproj --runtime ubuntu.16.04-x64 --output ./bin
        fi
      displayName: 'Build extensions'

    - script: |
        npm install
        npm run build --if-present
        npm run test --if-present
      displayName: 'Prepare binaries'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'MAIC - TEK Experts CR - v-gengon Group#2 (bddf3c59-769c-49a7-a515-6310ce264e6a)'
        appType: 'functionApp'
        WebAppName: 'jeusmenodedevops'
        deployToSlotOrASE: true
        ResourceGroupName: 'jesumePyFuncDevOps'
        SlotName: 'staging'
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
        enableCustomDeployment: true
        DeploymentType: 'runFromZip'
